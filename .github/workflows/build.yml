name: Build

on:
  push:
    branches:
      - 'master'
      - 'develop'
  pull_request:
    types: [ready_for_review, synchronize, opened]

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Installing Dependencies
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update  > /dev/null
          sudo apt-get install git curl python-dev python3-pip python-setuptools zlib1g-dev libjpeg-dev libudev-dev build-essential libusb-1.0-0-dev -y > /dev/null
          sudo apt-get install libc6:i386 libncurses5:i386 libstdc++6:i386 libc6-dev-i386 -y > /dev/null
          pip3 install wheel
          pip3 install --upgrade setuptools
          pip3 install ledgerblue
          pip3 install Pillow

      - name: Installing Compilers
        run: |
          echo "Creating BOLOS Directory.."
          mkdir /opt/bolos
          cd /opt/bolos

          echo "Installing ARM compilers.."
          wget -q https://launchpad.net/gcc-arm-embedded/5.0/5-2016-q1-update/+download/gcc-arm-none-eabi-5_3-2016q1-20160330-linux.tar.bz2
          tar xjf gcc-arm-none-eabi-5_3-2016q1-20160330-linux.tar.bz2
          sudo ln -s /opt/bolos/gcc-arm-none-eabi-5_3-2016q1/bin/arm-none-eabi-gcc /usr/bin/arm-none-eabi-gcc

          echo "Installing Clang compilers.."
          wget -q https://releases.llvm.org/8.0.0/clang+llvm-8.0.0-x86_64-linux-gnu-ubuntu-18.04.tar.xz
          tar xvf clang+llvm-8.0.0-x86_64-linux-gnu-ubuntu-18.04.tar.xz
          mv clang+llvm-8.0.0-x86_64-linux-gnu-ubuntu-18.04 clang-arm-fropi
          chmod 757 -R clang-arm-fropi/
          chmod +x clang-arm-fropi/bin/clang
          sudo ln -s -f /opt/bolos/clang-arm-fropi/bin/clang /usr/bin/clang

      - name: Installing the Ledger NanoS SDK
        run: |
          cd /opt/bolos/
          git clone https://github.com/LedgerHQ/nanos-secure-sdk.git
          cd nanos-secure-sdk/
          git -c advice.detachedHead=false checkout tags/nanos-161

      - name: Building the Ledger Compendia app
        run: make
        env:
          BOLOS_ENV: /opt/bolos
          BOLOS_SDK: /opt/bolos/nanos-secure-sdk
          ARM_HOME: /opt/bolos/gcc-arm-none-eabi-5_3-2016q1

      - name: Preparing Artifacts 
        run: |
          mkdir ./.github/workflows/artifacts
          cp ./bin/app.hex ./.github/workflows/artifacts/
          cp ./examples/example_helper.py ./.github/workflows/artifacts/
          printf '#!/usr/bin/env bash\n\n# Artifact builds are for TESTING PURPOSES ONLY!\n# Never use this with personal funds.\n#\n# unzip the artifacts and run "bash ./flash.sh" to execute this script.\n#\n# Requirements:\n# - python3\n# - ledgerblue (pip3 install ledgerblue)\n#\n' >> ./.github/workflows/artifacts/flash.sh && printf "%s" 'python3 -m ledgerblue.loadApp --fileName app.hex --appName Compendia --appFlags 0x240 --curve secp256k1 --path ' "\"44'/543'\"" ' --path ' "\"44'/1'\"" ' --targetId 0x31100004 --targetVersion="1.6.1" --icon "010000000000ffffffffffffffffffffff7ffe3ffc1ff89ff98ff1cff347e267e6ffffffffffffffff" --tlv --delete' >> ./.github/workflows/artifacts/flash.sh && printf '\n' >> ./.github/workflows/artifacts/flash.sh
          printf '#!/usr/bin/env bash\n\npython3 example_helper.py --publickey\n' >> ./.github/workflows/artifacts/publickey.sh
          printf '#!/usr/bin/env bash\n\npython3 example_helper.py --message 416c6c2070617274732073686f756c6420676f20746f67657468657220776974686f757420666f7263696e672e20596f75206d7573742072656d656d62657220746861742074686520706172747320796f7520617265207265617373656d626c696e67207765726520646973617373656d626c656420627920796f752e205468657265666f72652c20696620796f752063616e277420676574207468656d20746f67657468657220616761696e2c207468657265206d757374206265206120726561736f6e2e20427920616c6c206d65616e732c20646f206e6f742075736520612068616d6d65722e207e2049424d204d616e75616c202d20283139373529\n' >> ./.github/workflows/artifacts/message.sh
          printf '#!/usr/bin/env bash\n\npython3 example_helper.py --tx ff0217010000000000010000000000000003a02b9d5fdd1307c2ee4652ba54d492d1fd11a7d1bb3f3a44c4a05e79f19de933809698000000000000a08601000000000000000000171dfc69b54c7fe901e91d5a9ab78388645e2427ea\n' >> ./.github/workflows/artifacts/transfer.sh

      - name: Uploading Artifacts
        uses: actions/upload-artifact@v2-preview
        with:
          name: app-artifact-${{ github.sha }}
          path: ./.github/workflows/artifacts/*
